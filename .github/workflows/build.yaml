name: Go package

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18

      - name: Linter-check
        run: go run github.com/golangci/golangci-lint/cmd/golangci-lint@v1.50.1 run

      - name: Build
        run: go build -o outage_bot ./cmd/

      # - name: Test
      #   run: go test -v ./...

      - name: Transfer
        uses: actions/upload-artifact@v3
        with:
          name: outage_bot
          path: outage_bot        

  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: outage_bot

      - name: Display structure of downloaded files
        run: ls -R

      - name: Deploy
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          source: outage_bot
          target: outage_bot

  copy-serv-file:
    runs-on: ubuntu-latest
    needs: [deploy]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Add token to env
        run:  sed -i "4a Environment=OUTAGE_TELEGRAM_APITOKEN=${{ secrets.OUTAGE_TELEGRAM_APITOKEN }}" outagebot.service

      - name: Copy service file
        uses: appleboy/scp-action@master
        with:
            host: ${{ secrets.SSH_HOST }}
            username: ${{ secrets.SSH_USERNAME }}
            key: ${{ secrets.SSH_KEY }}
            source: outagebot.service
            target: /etc/systemd/system/

  copy-conf-file:
    runs-on: ubuntu-latest
    needs: [copy-serv-file]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Copy config file
        uses: appleboy/scp-action@master
        with:
            host: ${{ secrets.SSH_HOST }}
            username: ${{ secrets.SSH_USERNAME }}
            key: ${{ secrets.SSH_KEY }}
            source: config.yml
            target: ./outage_bot/

  copy-logger-conf-file:
    runs-on: ubuntu-latest
    needs: [copy-conf-file]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Add release date
        run:   sed -i '11a "release_date": "'"$(date +%Y-%m-%d\ %H:%M:%S)"'"' logger_config.json

      - name: Copy config file
        uses: appleboy/scp-action@master
        with:
            host: ${{ secrets.SSH_HOST }}
            username: ${{ secrets.SSH_USERNAME }}
            key: ${{ secrets.SSH_KEY }}
            source: logger_config.json
            target: ./outage_bot/

  copy-templates:
    runs-on: ubuntu-latest
    needs: [copy-logger-conf-file]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Copy config file
        uses: appleboy/scp-action@master
        with:
            host: ${{ secrets.SSH_HOST }}
            username: ${{ secrets.SSH_USERNAME }}
            key: ${{ secrets.SSH_KEY }}
            source: templates/dialog_templates_eng.tpl
            target: ./outage_bot/

  copy-migr-file:
    runs-on: ubuntu-latest
    needs: [copy-templates]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3    

      - name: Copy migration files
        uses: appleboy/scp-action@master
        with:
            host: ${{ secrets.SSH_HOST }}
            username: ${{ secrets.SSH_USERNAME }}
            key: ${{ secrets.SSH_KEY }}
            source: migrations/20230213161100_merged_migration.sql, migrations/20230213174400_insert_districts.sql 
            target: ./outage_bot/

  restart-service:
    runs-on: ubuntu-latest
    needs: [copy-migr-file]
    steps:
      - name: Restarts the service
        uses: appleboy/ssh-action@v0.1.7
        with:
            host: ${{ secrets.SSH_HOST }}
            username: ${{ secrets.SSH_USERNAME }}
            key: ${{ secrets.SSH_KEY }}
            script: |
              chmod +x ./outage_bot/outage_bot && sudo systemctl daemon-reload && sudo systemctl restart outagebot.service && sudo systemctl status outagebot.service            